{"version":3,"sources":["components/form/form.js","components/header/header.js","components/footer/footer.js","components/message/message.js","actions/messagesActions.js","components/messages/messages.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setOrDeleteError","field","error","errors","state","setState","handleNameValidation","name","fields","trim","match","handleEmailValidation","email","handlePhoneValidation","phone","handleMessageValidation","handleValidation","keys","length","handleChange","event","fieldName","target","value","handleSubmission","preventDefault","sending","setTimeout","onSubmit","resetForm","message","notifServiceCallEnded","renderSendButton","react_default","a","createElement","mdbreact","type","disabled","gradient","className","icon","spin","showErrorDiv","noValidate","label","id","group","onChange","required","hasOwnProperty","rows","nextProps","prevState","React","Component","Header","href","rel","src","alt","Footer","Message","handleSubmit","data","successDiv","errorDiv","Promise","resolve","reject","axios","post","vars","then","result","response","finalError","key","errorKey","createMessage","form","current","showSuccessDiv","color","text","createRef","header_header","components_form_form","ref","footer_footer","Messages","columns","sort","aria-hidden","_this2","socketIOClient","on","messages","unshift","JSON","parse","stringify","Alert","success","position","effect","timeout","get","react_s_alert_default","stack","borderless","bordered","hover","responsive","sortable","searching","entriesLabel","searchLabel","infoLabel","paginationLabel","App","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","HashRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b31537d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Input, Button, Fa } from 'mdbreact';\r\nimport './form.css';\r\n\r\nclass Form extends React.Component {\r\n\r\n\t// constructor\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n\t\t// default state\r\n        this.state = {\r\n            fields: {\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                message: ''\r\n            },\r\n            errors: {},\r\n            sending: false\r\n        };\r\n    }\r\n\r\n\t// watch for errors sent by the parent which he recieved from the server\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        if (nextProps.errors === prevState.errors)\r\n            return null;\r\n\r\n        return {\r\n            errors: nextProps.errors\r\n        };\r\n    }\r\n\r\n\t// function to set an error in errors or delete the old one\r\n    setOrDeleteError = (field, error) => {\r\n\r\n        let errors = this.state.errors;\r\n\r\n        if (error === '')\r\n            delete errors[field];\r\n        else\r\n            errors[field] = error;\r\n\r\n        this.setState({\r\n            errors: errors\r\n        });\r\n    }\r\n\r\n\t// handle the name validation\r\n    handleNameValidation = () => {\r\n\r\n        let name = this.state.fields['name'];\r\n        let error = '';\r\n\r\n        if (name.trim() === '')\r\n            error = 'Veuillez fournir un nom';\r\n        else if (!name.match(/^[a-zA-Z]+$/))\r\n            error = 'Veuillez fournir un nom avec des lettres et espaces seulement';\r\n\r\n       this.setOrDeleteError('name', error);\r\n    }\r\n\r\n\t// handle email validation\r\n    handleEmailValidation = () => {\r\n\r\n        let email = this.state.fields['email'];\r\n        let error = '';\r\n\r\n        if (email.trim() === '')\r\n            error = 'Veuillez fournir une adresse email';\r\n        else if (!email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/))\r\n            error = 'Veuillez fournir une adresse email valide';\r\n\r\n        this.setOrDeleteError('email', error);\r\n    }\r\n\r\n\t// handle phone validation\r\n    handlePhoneValidation = () => {\r\n\r\n        let phone = this.state.fields['phone'];\r\n        let error = '';\r\n\r\n        if (phone.trim() === '')\r\n            error = 'Veuillez fournir un numéro de téléphone';\r\n        else if (!phone.match(/^[0-9]+$/))\r\n            error = 'Veuillez fournir un numéro de téléphone avec des chiffres seulement';\r\n\r\n        this.setOrDeleteError('phone', error);\r\n    }\r\n\r\n\t// handle message validation\r\n    handleMessageValidation = () => {\r\n\r\n        let message = this.state.fields['message'];\r\n        let error = '';\r\n\r\n        if (message.trim() === '')\r\n            error = 'Veuillez fournir un message';\r\n\r\n        this.setOrDeleteError('message', error);\r\n    }\r\n\r\n\t// handle the form validation\r\n    handleValidation = () => {\r\n\r\n        this.handleNameValidation();\r\n        this.handleEmailValidation();\r\n        this.handlePhoneValidation();\r\n        this.handleMessageValidation();\r\n\r\n\t\t// return true if there's no error, false otherwise\r\n        return Object.keys(this.state.errors).length === 0;\r\n    }\r\n\r\n\t// handle input change\r\n    handleChange = (event) => {\r\n\r\n        let fields = this.state.fields;\r\n\r\n        let fieldName = event.target.name;\r\n\r\n\t\t// set the field value in the pros\r\n        fields[fieldName] = event.target.value;\r\n        this.setState({\r\n            fields: fields\r\n        });\r\n\r\n\t\t// detect which validator to run base on the field name\r\n        switch (fieldName) {\r\n            case 'name':\r\n                this.handleNameValidation();\r\n                break;\r\n            case 'email':\r\n                this.handleEmailValidation();\r\n                break;\r\n            case 'phone':\r\n                this.handlePhoneValidation();\r\n                break;\r\n            case 'message':\r\n                this.handleMessageValidation();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\t// handle form submission\r\n    handleSubmission = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n\t\t// allow it only if the form is valid\r\n        if (this.handleValidation()) {\r\n\r\n\t\t\t// set the sending var to true to change the submit button\r\n            this.setState({\r\n                sending: true\r\n            });\r\n\r\n\t\t\t// send the data to the parent\r\n            setTimeout(() => {\r\n                this.props.onSubmit(this.state.fields);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n\t// function called by the parent: reset the form\r\n    resetForm = () => {\r\n\r\n        this.setState({\r\n            fields: {\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                message: ''\r\n            }\r\n        });\r\n    }\r\n\r\n\t// function called by the parent: return the original send button\r\n    notifServiceCallEnded = () => {\r\n\r\n        this.setState({\r\n            sending: false\r\n        });\r\n    }\r\n\r\n\t// render the send button\r\n    renderSendButton = () => {\r\n\r\n        if (this.state.sending)\r\n            return (\r\n                <Button type=\"submit\" disabled gradient=\"blue\" className=\"btn-block\">Envoi en cours <Fa icon=\"circle-o-notch\" spin className=\"ml-1\" /></Button>\r\n            );\r\n        return (\r\n                <Button type=\"submit\" gradient=\"blue\" className=\"btn-block\">Envoyer <Fa icon=\"paper-plane-o\" className=\"ml-1\" /></Button>\r\n            );\r\n    }\r\n\r\n\t// render the error div\r\n    showErrorDiv = (field) => {\r\n        return (\r\n            <div className=\"error\">* {this.state.errors[field]}</div>\r\n        );\r\n    }\r\n\r\n\t// render the component\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmission} noValidate>\r\n                <p className=\"h3 text-center mb-4\">Laissez nous un message</p>\r\n                <div className=\"grey-text\">\r\n\r\n                    <Input label=\"Votre nom\" name=\"name\" id=\"name\" icon=\"user\" group type=\"text\" value={this.state.fields.name} onChange={this.handleChange} required />\r\n                    {this.state.errors.hasOwnProperty(\"name\") ? this.showErrorDiv(\"name\") : null}\r\n\r\n                    <Input label=\"Votre email\" name=\"email\" id=\"email\" icon=\"envelope\" group type=\"email\" value={this.state.fields.email} onChange={this.handleChange} required />\r\n                    {this.state.errors.hasOwnProperty(\"email\") ? this.showErrorDiv(\"email\") : null}\r\n\r\n                    <Input label=\"Votre numéro de téléphone\" name=\"phone\" id=\"phone\" icon=\"phone\" group type=\"text\" value={this.state.fields.phone} onChange={this.handleChange} required />\r\n                    {this.state.errors.hasOwnProperty(\"phone\") ? this.showErrorDiv(\"phone\") : null}\r\n\r\n                    <Input type=\"textarea\" name=\"message\" id=\"message\" rows=\"2\" label=\"Votre message\" icon=\"pencil\" value={this.state.fields.message} onChange={this.handleChange} required />\r\n                    {this.state.errors.hasOwnProperty(\"message\") ? this.showErrorDiv(\"message\") : null}\r\n\r\n                </div>\r\n                <div className=\"text-center mb-3 mt-4\">\r\n                    { this.renderSendButton() }\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\nimport './header.css';\n\n\nclass Header extends Component {\n\n    render() {\n\t\treturn (\n\t\t\t<header>\n\t\t\t\t<a href='https://www.medgo.fr/' rel=\"noopener noreferrer\" target=\"_blank\">\n\t\t\t\t\t<img src=\"http://www.doctors20.com/wp-content/uploads/2018/04/medgo-logo-286x300.png\" alt=\"medGo logo\" />\n\t\t\t\t</a>\n\t\t\t</header>\n\t\t);\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\r\nimport './footer.css';\r\n\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<span> Créé par <a href='mailto:radhinasser@gmail.com'>Radhi NASSER</a> pour <a href='https://www.medgo.fr/' rel=\"noopener noreferrer\" target=\"_blank\">medGo</a> </span>\r\n\t\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card, CardBody } from 'mdbreact';\r\n\r\nimport Form from '../form/form';\r\nimport Header from '../header/header';\r\nimport Footer from '../footer/footer';\r\nimport { createMessage } from '../../actions/messagesActions';\r\n\r\n\r\nclass Message extends Component {\r\n\r\n\t// constructor\r\n    constructor(props) {\r\n\r\n\t\tsuper(props);\r\n\r\n\t\t// default state\r\n\t\tthis.state = {\r\n\t\t\tsuccessDiv: false,\r\n\t\t\terrorDiv: false,\r\n\t\t\terrors: {}\r\n\t\t};\r\n\r\n\t\t// create a refrence on the 'form' child component to exceute function from it\r\n\t\tthis.form = React.createRef();\r\n    }\r\n\r\n\t// handle form submission\r\n    handleSubmit = (data) => {\r\n\r\n\t\t// hide error and success divs\r\n\t\tthis.setState({\r\n\t\t\tsuccessDiv: false,\r\n\t\t\terrorDiv: false\r\n\t\t});\r\n\r\n\t\t// call the create message api\r\n\t\tcreateMessage(data).then(\r\n\t\t\t(result) => {\r\n\r\n\t\t\t\t// reset the form and return the send button to the original state\r\n\t\t\t\tthis.form.current.resetForm();\r\n\t\t\t\tthis.form.current.notifServiceCallEnded();\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsuccessDiv: true\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// hide the success div after 5s\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tsuccessDiv: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 5000);\r\n\r\n\t\t\t\t// remove errors\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terrors: {}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\r\n\t\t\t\t// return the send button to the original state\r\n\t\t\t\tthis.form.current.notifServiceCallEnded();\r\n\r\n\t\t\t\t// check if it's a validation error\r\n\t\t\t\tif (error.hasOwnProperty('errors')) {\r\n\r\n\t\t\t\t\t// set them\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terrors: error.errors\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// show the generic error div + reset the errors object\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terrorDiv: true,\r\n\t\t\t\t\t\terrors: {}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n    }\r\n\r\n\t// show the success div\r\n    showSuccessDiv = () => {\r\n\r\n\t\treturn (\r\n\t\t\t<Card color=\"success-color\" text=\"white\" className=\"text-center\">\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\tVotre message a été envoyé avec succès.\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t);\r\n    }\r\n\r\n\t// show the error div\r\n    showErrorDiv = () => {\r\n\r\n\t\treturn (\r\n\t\t\t<Card color=\"red lighten-1\" text=\"white\" className=\"text-center\">\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\tUne erreur est survenue. Veuillez réessayer dans quelques minutes.\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t);\r\n    }\r\n\r\n\t// render the component\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col className=\"col-md-6 ml-md-auto mr-md-auto mt-4\">\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<Form ref={this.form} errors={this.state.errors} onSubmit={this.handleSubmit}></Form>\r\n\t\t\t\t\t\t\t\t{this.state.successDiv ? this.showSuccessDiv() : null}\r\n\t\t\t\t\t\t\t\t{this.state.errorDiv ? this.showErrorDiv() : null}\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Footer />\r\n\t\t\t</Container>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default Message;\r\n","import axios from 'axios';\r\n\r\nimport * as vars from '../vars.json'; // global variables\r\n\r\n\r\n// get messages function\r\nexport function getMessages() {\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n        axios.get(vars.API_URL)\r\n            .then(result => {\r\n                resolve(result.data);\r\n            }, (error) => {\r\n\t\t\t\treject(error);\r\n            });\r\n    });\r\n}\r\n\r\n// create a new message function\r\nexport function createMessage(data) {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n\r\n        axios.post(vars.API_URL, data)\r\n            .then(result => {\r\n                resolve(result);\r\n            }, (error) => {\r\n\r\n\t\t\t\t// if its' a validation error, handle it\r\n                if (error.response.hasOwnProperty('data')) {\r\n\r\n                    let finalError = error.response.data;\r\n\r\n                    if (finalError.hasOwnProperty('errors')) {\r\n                        // transform the errors array to an object\r\n                        let errors = {};\r\n                        for (let key in finalError.errors) {\r\n                            let error = finalError.errors[key];\r\n                            let errorKey = Object.keys(error)[0];\r\n                            errors[errorKey] = error[errorKey];\r\n                        }\r\n                        finalError.errors = errors;\r\n                    }\r\n\r\n                    reject(finalError);\r\n                }\r\n                else {\r\n\r\n                    reject(error);\r\n                }\r\n            });\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card, CardBody } from 'mdbreact';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Alert from 'react-s-alert';\r\nimport socketIOClient from 'socket.io-client';\r\nimport 'react-s-alert/dist/s-alert-default.css';\r\nimport 'react-s-alert/dist/s-alert-css-effects/slide.css';\r\n\r\nimport Header from '../header/header';\r\nimport Footer from '../footer/footer';\r\nimport { getMessages } from '../../actions/messagesActions';\r\nimport * as vars from '../../vars.json'; // global variables\r\n\r\n\r\nclass Messages extends Component {\r\n\r\n\t// constructor\r\n    constructor(props) {\r\n\r\n\t\tsuper(props);\r\n\r\n\t\t// default state\r\n\t\tthis.state = {\r\n\t\t\terrorDiv: false,\r\n\t\t\tcolumns: [ // table fields\r\n\t\t\t{\r\n\t\t        label: '#',\r\n\t\t        field: '#',\r\n\t\t        sort: 'asc'\r\n\t\t    },\r\n\t\t\t{\r\n\t\t\t\tlabel: [<i key=\"Lorem\" className=\"fa fa-user mr-2\" aria-hidden=\"true\"></i>, 'Nom'],\r\n\t\t        field: 'name',\r\n\t\t        sort: 'asc'\r\n\t\t    },\r\n\t\t    {\r\n\t\t        label: [<i key=\"Lorem\" className=\"fa fa-phone mr-2\" aria-hidden=\"true\"></i>, 'Numéro de téléphone'],\r\n\t\t        field: 'phone',\r\n\t\t        sort: 'asc'\r\n\t\t    },\r\n\t\t    {\r\n\t\t        label: [<i key=\"Lorem\" className=\"fa fa-envelope mr-2\" aria-hidden=\"true\"></i>, 'Email'],\r\n\t\t        field: 'email',\r\n\t\t        sort: 'asc'\r\n\t\t    },\r\n\t\t    {\r\n\t\t        label: [<i key=\"Lorem\" className=\"fa fa-pencil mr-2\" aria-hidden=\"true\"></i>, 'Message'],\r\n\t\t        field: 'message',\r\n\t\t        sort: 'asc'\r\n\t\t    },\r\n\t\t    {\r\n\t\t        label: [<i key=\"Lorem\" className=\"fa fa-clock-o mr-2\" aria-hidden=\"true\"></i>, 'Créé à'],\r\n\t\t        field: 'createdAt',\r\n\t\t        sort: 'asc'\r\n\t\t    }],\r\n\t\t\trows: [] // table rows\r\n      \t};\r\n    }\r\n\r\n\t// when the componenet is mounted\r\n\tcomponentDidMount() {\r\n\r\n\t\tconst socket = socketIOClient(vars.BACKEND_URL);\r\n\t\tsocket.on('new-message', (message) => {\r\n\r\n\t\t\t// get the messages list, add the new message on top and set them back to in the state\r\n\t\t\tlet messages = this.state.rows;\r\n\t\t\tmessages.unshift(message);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\trows: JSON.parse(JSON.stringify(messages))\r\n\t\t\t});\r\n\r\n\t\t\t// show an alert\r\n\t\t\tAlert.success('Un nouveau message est arrivé', {\r\n\t\t\t\tposition: 'top-right',\r\n\t\t\t\teffect: 'slide',\r\n\t\t\t\ttimeout: 3000\r\n\t\t\t});\r\n\r\n\t\t});\r\n\r\n\t\t// get messages from the service\r\n    \tgetMessages().then(\r\n        \t(result) => {\r\n\r\n\t\t\t\t// set the messages\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\trows: result.messages\r\n\t\t\t\t});\r\n\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\r\n\t\t\t\t// show the generic error div\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terrorDiv: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n    \t);\r\n    }\r\n\r\n\t// show the error div\r\n    showErrorDiv = () => {\r\n\r\n\t\treturn (\r\n\t\t\t<Card color=\"red lighten-1\" text=\"white\" className=\"text-center\">\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\tUne erreur est survenue. Veuillez réessayer dans quelques minutes.\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t);\r\n    }\r\n\r\n\t// render the component\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Alert stack = {false}/>\r\n            \t<Row>\r\n              \t\t<Col className=\"col-md-12 mb-4 mt-4\">\r\n\t\t\t\t\t\t{this.state.errorDiv ? this.showErrorDiv() : null}\r\n\t\t\t\t\t\t<Card className=\"mt-3\">\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t  \t\t\t<p className=\"h3 text-center mb-4\">Liste des messages</p>\r\n\r\n\t\t\t\t\t\t\t\t< MDBDataTable\r\n\t\t\t\t\t\t\t\t\tborderless\r\n\t\t\t\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\t\t\t\thover\r\n\t\t\t\t\t\t\t\t\tresponsive\r\n\t\t\t\t\t\t\t\t\tsortable = { false }\r\n\t\t\t\t\t\t\t\t\tsearching = { false }\r\n\t\t\t\t\t\t\t\t\tentriesLabel = \"Afficher les entrées\"\r\n\t\t\t\t\t\t\t\t\tsearchLabel = \"Chercher\"\r\n\t\t\t\t\t\t\t\t\tinfoLabel = {[\"Montrant\", \"à\", \"de\", \"entrées\"]}\r\n\t\t\t\t\t\t\t\t\tpaginationLabel = {[\"Précédent\", \"Suivant\"] }\r\n\t\t\t\t\t\t\t\t\tdata = { { columns: this.state.columns, rows: this.state.rows } }\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n                  \t\t\t</CardBody>\r\n                \t\t</Card>\r\n              \t\t</Col>\r\n            \t</Row>\r\n\t\t\t\t<Footer/>\r\n\t\t\t</Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Messages;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Message from './components/message/message';\r\nimport Messages from './components/messages/messages';\r\n\r\nclass App extends Component {\r\n\r\n\t// render the component and handle routes\r\n    render() {\r\n        return (\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/' component={Message}/>\r\n\t\t\t\t<Route exact path='/messages' component={Messages}/>\r\n\t\t\t</Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<HashRouter>\r\n\t\t<App />\r\n\t</HashRouter>,\r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}